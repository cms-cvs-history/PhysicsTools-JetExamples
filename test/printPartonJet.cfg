process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cerr.default.limit = 1

   include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

   untracked PSet maxEvents = {untracked int32 input = 1}

  source = PoolSource {
    untracked vstring fileNames = {
            '/store/RelVal/2007/6/4/RelVal-RelVal150pre5TTbar-1180981428/0000/8EA0C740-0513-DC11-8880-001731AF684D.root',
            '/store/RelVal/2007/6/4/RelVal-RelVal150pre5TTbar-1180981428/0000/B4FA23F0-0013-DC11-BFAD-003048767D3D.root',
            '/store/RelVal/2007/6/4/RelVal-RelVal150pre5TTbar-1180981428/0000/FAFA7ECB-3813-DC11-8942-00304875AB59.root'       
     }
  }
  
# select partons instead of AllStable as jet inputs 
  module genParticlesPartons = GenParticleCandidateSelector {
   string src = "genParticleCandidates"
   bool stableOnly = false
   bool partons    = true
   untracked bool verbose = false
   vstring excludeList = {}
   vstring includeList = {}
  }

# produce the jets
  module partonJet = IterativeConeJetProducer {
    untracked string alias = "IC5PartonGenJet"
    untracked int32 debugLevel = 0
    double seedThreshold = 1.0
    double inputEtMin = 0.
    double inputEMin = 0.
    InputTag src = genParticlesPartons
    untracked string jetType = "GenJet"
    untracked bool verbose = false
    double coneRadius = 0.5
  }

# jets to candidate
  module GenJetCollectionClone = GenJetShallowCloneProducer{
    InputTag src = partonJet
  }

# jet selection (ptmin)
  module genJetSele = PtMinCandSelector{
    InputTag src = GenJetCollectionClone
    double ptMin        = 15.0
  }

# jets to candidate
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = iterativeCone5CaloJets
  }

# jet selection (ptMin)
  module caloJetSele = PtMinCandSelector{
    InputTag src = caloJetCollectionClone
    double ptMin        = 15.0
  }
    
# The matching routine OneToOne
  module jetMatchOne = CandOneToOneDeltaRMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    untracked bool printDebug = true
  }

  module printEvent = printPartonJet {
    InputTag src   = genJetSele
    InputTag map   = jetMatchOne
    untracked string HistOutFile = "myPlots.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {genParticlesPartons,partonJet,GenJetCollectionClone, genJetSele, caloJetCollectionClone, caloJetSele, jetMatchOne, printEvent }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

